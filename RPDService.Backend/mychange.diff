diff --git a/.gitignore b/.gitignore
deleted file mode 100644
index 1746e32..0000000
--- a/.gitignore
+++ /dev/null
@@ -1,2 +0,0 @@
-bin
-obj
diff --git a/.gitmodules b/.gitmodules
index c859248..3c28e14 100644
--- a/.gitmodules
+++ b/.gitmodules
@@ -1,3 +1,4 @@
 [submodule "RPD_time_IT_frontend"]
 	path = RPD_time_IT_frontend
 	url = https://github.com/evggal/RPD_time_IT_frontend
+	branch = main
diff --git a/Controllers/RPDController.cs b/Controllers/RPDController.cs
deleted file mode 100644
index b51a180..0000000
--- a/Controllers/RPDController.cs
+++ /dev/null
@@ -1,22 +0,0 @@
-using Microsoft.AspNetCore.Mvc;
-using RPDSerice.Models;
-using RPDSerice.RPDGenerator.Interfaces;
-namespace RPDService.Controllers;
-
-[ApiController]
-[Route("[controller]/[action]")]
-public class RPDController : ControllerBase
-{
-	private readonly IRPDGenerator _RPDGenerator;
-	
-	public RPDController(IRPDGenerator RPDGenerator)
-	{
-		_RPDGenerator = RPDGenerator;
-	}
-	[HttpGet]
-	public IActionResult GenerateRPD(string dto)
-	{
-		_RPDGenerator.GetRPDPdfBytes(dto);
-		return Ok("Hello World");
-	}
-}
diff --git a/Models/RPD.cs b/Models/RPD.cs
deleted file mode 100644
index befe545..0000000
--- a/Models/RPD.cs
+++ /dev/null
@@ -1,5 +0,0 @@
-namespace RPDSerice.Models;
-public class RPD : RPDBase
-{
-	public int Id { get; set; }
-}
\ No newline at end of file
diff --git a/Models/RPDBase.cs b/Models/RPDBase.cs
deleted file mode 100644
index c5ec1cc..0000000
--- a/Models/RPDBase.cs
+++ /dev/null
@@ -1,5 +0,0 @@
-namespace RPDSerice.Models;
-public class RPDBase
-{
-	
-}
\ No newline at end of file
diff --git a/Program.cs b/Program.cs
deleted file mode 100644
index 0614b94..0000000
--- a/Program.cs
+++ /dev/null
@@ -1,28 +0,0 @@
-using RPDSerice.RPDGenerator.Interfaces;
-using RPDSerice.RPDGenerator.Implementation;
-var builder = WebApplication.CreateBuilder(args);
-// Add services to the container.
-// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle
-builder.Services.AddEndpointsApiExplorer();
-builder.Services.AddSwaggerGen();
-builder.Services.AddControllers();
-builder.Services.AddTransient<IRPDGenerator, RPDGenerator>();
-builder.Services.AddScoped<IRPDGenerator, RPDGenerator>();
-builder.Services.AddSingleton<IRPDGenerator, RPDGenerator>();
-
-var app = builder.Build();
-
-// Configure the HTTP request pipeline.
-if (app.Environment.IsDevelopment())
-{
-	app.UseSwagger();
-	app.UseSwaggerUI();
-}
-
-app.UseHttpsRedirection();
-
-app.MapControllers();
-
-
-
-app.Run();
diff --git a/Properties/launchSettings.json b/Properties/launchSettings.json
deleted file mode 100644
index 1ae26eb..0000000
--- a/Properties/launchSettings.json
+++ /dev/null
@@ -1,41 +0,0 @@
-﻿{
-  "$schema": "http://json.schemastore.org/launchsettings.json",
-  "iisSettings": {
-    "windowsAuthentication": false,
-    "anonymousAuthentication": true,
-    "iisExpress": {
-      "applicationUrl": "http://localhost:22855",
-      "sslPort": 44330
-    }
-  },
-  "profiles": {
-    "http": {
-      "commandName": "Project",
-      "dotnetRunMessages": true,
-      "launchBrowser": true,
-      "launchUrl": "swagger",
-      "applicationUrl": "http://localhost:5202",
-      "environmentVariables": {
-        "ASPNETCORE_ENVIRONMENT": "Development"
-      }
-    },
-    "https": {
-      "commandName": "Project",
-      "dotnetRunMessages": true,
-      "launchBrowser": true,
-      "launchUrl": "swagger",
-      "applicationUrl": "https://localhost:7014;http://localhost:5202",
-      "environmentVariables": {
-        "ASPNETCORE_ENVIRONMENT": "Development"
-      }
-    },
-    "IIS Express": {
-      "commandName": "IISExpress",
-      "launchBrowser": true,
-      "launchUrl": "swagger",
-      "environmentVariables": {
-        "ASPNETCORE_ENVIRONMENT": "Development"
-      }
-    }
-  }
-}
diff --git a/RPDSerice.csproj b/RPDSerice.csproj
deleted file mode 100644
index 7b0becf..0000000
--- a/RPDSerice.csproj
+++ /dev/null
@@ -1,16 +0,0 @@
-<Project Sdk="Microsoft.NET.Sdk.Web">
-
-  <PropertyGroup>
-    <TargetFramework>net8.0</TargetFramework>
-    <Nullable>enable</Nullable>
-    <ImplicitUsings>enable</ImplicitUsings>
-  </PropertyGroup>
-
-  <ItemGroup>
-    <PackageReference Include="DocumentFormat.OpenXml" Version="3.0.1" />
-    <PackageReference Include="Microsoft.AspNetCore.OpenApi" Version="8.0.2" />
-    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
-    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.4.0" />
-  </ItemGroup>
-
-</Project>
diff --git a/RPDSerice.http b/RPDSerice.http
deleted file mode 100644
index e25c250..0000000
--- a/RPDSerice.http
+++ /dev/null
@@ -1,6 +0,0 @@
-@RPDSerice_HostAddress = http://localhost:5202
-
-GET {{RPDSerice_HostAddress}}/weatherforecast/
-Accept: application/json
-
-###
diff --git a/RPD_time_IT_frontend b/RPD_time_IT_frontend
deleted file mode 160000
index 2c455c3..0000000
--- a/RPD_time_IT_frontend
+++ /dev/null
@@ -1 +0,0 @@
-Subproject commit 2c455c3993d176bc85727db1a2c17946d8abb017
diff --git a/Services/RPDGenerator/Implementation/RPDGenerator.cs b/Services/RPDGenerator/Implementation/RPDGenerator.cs
deleted file mode 100644
index b587cb3..0000000
--- a/Services/RPDGenerator/Implementation/RPDGenerator.cs
+++ /dev/null
@@ -1,121 +0,0 @@
-using RPDSerice.Models;
-using RPDSerice.RPDGenerator.Interfaces;
-using Newtonsoft.Json.Linq;
-using DocumentFormat.OpenXml.Packaging;
-using DocumentFormat.OpenXml.Wordprocessing;
-
-namespace RPDSerice.RPDGenerator.Implementation;
-
-public class RPDGenerator : IRPDGenerator
-{
-    const string templateFilePath ="Services/RPDGenerator/template.docx";
-	public Byte[] GetRPDPdfBytes(string JsonRPD)
-	{
-        JObject data = JObject.Parse(JsonRPD);
-
-        // Открытие документа
-        using (WordprocessingDocument doc =
-                   WordprocessingDocument.Open(templateFilePath, true))
-        {
-            var body = doc.MainDocumentPart.Document.Body;
-
-            // Замена плейсхолдеров в тексте
-            foreach (var property in data.Properties())
-            {
-                if (property.Name.StartsWith("{{TEXT"))
-                {
-                    string placeholder = property.Name;
-                    string text = property.Value.ToString();
-                    ReplacePlaceholderInText(body, placeholder, text);
-                }
-                else if (property.Name.StartsWith("{{TABLE"))
-                {
-                    int underscoreIndex = property.Name.IndexOf('_');
-                    if (underscoreIndex != -1 &&
-                        underscoreIndex < property.Name.Length - 1)
-                    {
-                            string tableId = property.Name.Substring(underscoreIndex + 1);
-                            JArray rowsData = (JArray)property.Value;
-                            AddRowsToTable(body, tableId, rowsData);
-                        
-                    }
-                }
-                else if (property.Name.StartsWith("{{ENUM"))
-                {
-                    JArray itemsData = (JArray)property.Value;
-                    InsertEnumerationItemsInText(body, property.Name, itemsData);
-                }
-            }
-        }
-        return new Byte[]{0};
-    }
-
-    private void ReplacePlaceholderInText(Body body, string placeholder,
-                                          string text)
-    {
-        var paragraphs = body.Elements<Paragraph>();
-        foreach (var paragraph in paragraphs)
-        {
-            foreach (var run in paragraph.Elements<Run>())
-            {
-                foreach (var textElement in run.Elements<Text>())
-                {
-                    if (textElement.Text.Contains(placeholder))
-                    {
-                        textElement.Text = textElement.Text.Replace(placeholder, text);
-                    }
-                }
-            }
-        }
-    }
-
-    private void AddRowsToTable(Body body, string tableId, JArray rowsData)
-    {
-        // Находим таблицу с указанным идентификатором
-        var table = body.Elements<Table>().FirstOrDefault(
-            t => t.Descendants<TableProperties>().Any(
-                prop =>
-                    prop.TableCaption != null && prop.TableCaption.Val == tableId));
-        if (table != null)
-        {
-            foreach (var rowData in rowsData)
-            {
-                var row = new TableRow();
-                foreach (var cellData in rowData)
-                {
-                    var cell = new TableCell(
-                        new Paragraph(new Run(new Text(cellData.ToString()))));
-                    row.Append(cell);
-                }
-                table.Append(row);
-            }
-        }
-    }
-
-    private void InsertEnumerationItemsInText(Body body, string holder,
-                                              JArray itemsData)
-    {
-        var paragraphs = body.Elements<Paragraph>();
-        foreach (var paragraph in paragraphs)
-        {
-            foreach (var run in paragraph.Elements<Run>())
-            {
-                foreach (var textElement in run.Elements<Text>())
-                {
-                    if (textElement.Text.Contains(holder))
-                    {
-                        var items =
-                            string.Join(",\n- ", itemsData.Select(item => item.ToString()));
-
-                        // Заменяем плейсхолдер {{enum}} в тексте на сформированный список
-                        // элементов
-                        textElement.Text = textElement.Text.Replace(holder, "- " + items);
-                    }
-                }
-            }
-        }
-       
-    }
-
-	}
-
diff --git a/Services/RPDGenerator/Impretive/IRPDGenerator.cs b/Services/RPDGenerator/Impretive/IRPDGenerator.cs
deleted file mode 100644
index e6869f7..0000000
--- a/Services/RPDGenerator/Impretive/IRPDGenerator.cs
+++ /dev/null
@@ -1,6 +0,0 @@
-using RPDSerice.Models;
-namespace RPDSerice.RPDGenerator.Interfaces;
-public interface IRPDGenerator
-{
-	Byte[] GetRPDPdfBytes(string RPDjson);
-}
diff --git a/appsettings.Development.json b/appsettings.Development.json
deleted file mode 100644
index 0c208ae..0000000
--- a/appsettings.Development.json
+++ /dev/null
@@ -1,8 +0,0 @@
-{
-  "Logging": {
-    "LogLevel": {
-      "Default": "Information",
-      "Microsoft.AspNetCore": "Warning"
-    }
-  }
-}
diff --git a/appsettings.json b/appsettings.json
deleted file mode 100644
index 10f68b8..0000000
--- a/appsettings.json
+++ /dev/null
@@ -1,9 +0,0 @@
-{
-  "Logging": {
-    "LogLevel": {
-      "Default": "Information",
-      "Microsoft.AspNetCore": "Warning"
-    }
-  },
-  "AllowedHosts": "*"
-}
